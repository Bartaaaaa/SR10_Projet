<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/stylesheets/listes.css">
    <link rel="stylesheet" href="/stylesheets/offresEmploi.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <title><%= title %></title>
</head>
<body>
    <%- include('barrenavigation') %>
    <h1 class="heading"><%= title %></h1>

    <div class="main-content">
        <div class="left-column">
            <input type="search" name="searchbar" id="searchbar" class="searchbar" placeholder="Rechercher une demande d'adhérence...">
            <div id="adherencesList"></div>
            <div id="pagination" class="container-row hundred"></div>
        </div>
    </div>
    <script src="/javascripts/filter.js"></script>
    <script src="/javascripts/utilitaires.js"></script>
    
    <script>
        const initialAdherences = <%- JSON.stringify(adherences) %>;
        let currentAdherences = orderById(initialAdherences);

        // Pagination
        document.addEventListener("DOMContentLoaded", function() {
            console.log("DOM fully loaded and parsed");
            const adherences = <%- JSON.stringify(adherences) %>;
            const pagination = document.getElementById("pagination");
            const rowsPerPage = 4;
            const adherencesContainer = document.getElementById("adherencesList");

            renderList(currentAdherences, 'adherencesList', createAdherenceCard);
            setupPagination(currentAdherences, pagination, rowsPerPage, adherencesContainer, renderAdherenceCard, false);
        });


        // Barre de recherche
        const searchbar = document.getElementById('searchbar');
        searchbar.addEventListener('input', (event) => {
            console.log("Search input event triggered");
            const filteredList = search(initialAdherences, ['organisation', 'recruteur', 'etat'], event.target.value);
            currentAdherences = orderById(filteredList);
            renderList(currentAdherences, 'adherencesList', createAdherenceCard);
        });
    
        // Création des cards 
        function createAdherenceCard(adherence) {
            const cardDiv = document.createElement('div');
            cardDiv.classList.add('offer-card');
            cardDiv.innerHTML = renderAdherenceCard(adherence);
            return cardDiv;
        }

document.addEventListener("DOMContentLoaded", function() {
    attachButtonListeners();
});

function attachButtonListeners() {
    document.querySelectorAll('.accept-btn, .reject-btn').forEach(button => {
        button.addEventListener('click', async function() {
            const organisation = this.getAttribute('data-organisation');
            const recruteur = this.getAttribute('data-recruteur');
            const etat = this.getAttribute('data-etat');
            await updateAdherenceState(organisation, recruteur, etat);
        });
    });
}

async function updateAdherenceState(organisation, recruteur, etat) {
    try {
        const response = await fetch('/pageperso/user-info');
        const user = await response.json();
        console.log("User info fetched:", user);

        var userRole = user.role;
        if (userRole === 'recruteur' || userRole === 'administrateur') {
            console.log(`Updating adherence state for organisation: ${organisation}, recruteur: ${recruteur}, etat: ${etat}`);
            const updateResponse = await fetch('/DemandeAdherRecruteur/updateAdherence', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ organisation, recruteur, etat })
            });

            const data = await updateResponse.json();
            console.log('Response from server:', data);

            if (data.success) {
                location.reload();
            } else {
                console.error('Error updating adherence state:', data.message);
                alert('Erreur lors de la mise à jour de l\'état d\'adhérence: ' + data.message);
            }
        } else {
            console.log('Access denied: You do not have the required role to perform this action.');
            alert("Vous n'avez pas les droits pour accepter ou refuser des adhérences");
        }
    } catch (error) {
        console.error('Error fetching user info:', error);
        alert('Erreur lors de la récupération des informations utilisateur.');
    }
}




    /*    document.addEventListener("DOMContentLoaded", async function() {
    console.log("DOM fully loaded and parsed for user roles");
    var usersLink = document.getElementById("ListeUsers");
    usersLink.style.display = "none";

    try {
        const response = await fetch('/pageperso/user-info');
        const user = await response.json();
        console.log("User info fetched:", user);

        var userRole = user.role;
        if (userRole === "administrateur") {
            usersLink.style.display = "block";
        } else {
            usersLink.style.display = "none";
        }

        if (userRole === 'recruteur' || userRole === 'administrateur') {
            document.body.addEventListener('click', function(event) {
                if (event.target.classList.contains('accept-btn')) {
                    const organisation = event.target.dataset.organisation;
                    const recruteur = event.target.dataset.recruteur;
                    console.log(`Accept button clicked for organisation: ${organisation}, recruteur: ${recruteur}`);
                    updateAdherenceState(organisation, recruteur, 'validee');
                }

                if (event.target.classList.contains('reject-btn')) {
                    const organisation = event.target.dataset.organisation;
                    const recruteur = event.target.dataset.recruteur;
                    console.log(`Reject button clicked for organisation: ${organisation}, recruteur: ${recruteur}`);
                    updateAdherenceState(organisation, recruteur, 'refusee');
                }
            });
        } else {
            console.log('Access denied: You do not have the required role to perform this action.');
            alert("Vous n'avez pas les droits pour accepter ou refuser des adhérences");
        }
    } catch (error) {
        console.error('Error fetching user info:', error);
    }
});

async function updateAdherenceState(organisation, recruteur, etat) {
    console.log(`Updating adherence state for organisation: ${organisation}, recruteur: ${recruteur}, etat: ${etat}`);
    try {
        const response = await fetch('/DemandeAdherRecruteur/updateAdherence', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ organisation, recruteur, etat })
        });
        const data = await response.json();
        console.log('Response from server:', data);
        if (data.success) {
            location.reload();
        } else {
            console.error('Error updating adherence state:', data.message);
        }
    } catch (error) {
        console.error('Error:', error);
    }
}*/
    </script>
    
    
</body>
</html>


