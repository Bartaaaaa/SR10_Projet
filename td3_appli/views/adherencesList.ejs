<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/stylesheets/listes.css"> <!-- Correct CSS inclusion -->
    <link rel="stylesheet" href="/stylesheets/offresEmploi.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <title><%= title %></title>
</head>
<body>
    <%- include('barrenavigation') %> <!-- Inclure la barre de navigation -->
    <h1 class="heading"><%= title %></h1>

    <div class="main-content">
        <div class="left-column">
            <% adherences.forEach((adherence) => { %>
                <div class="offer-card">
                    <div class="card-content">
                        <div class="container-column">
                            <div class="container-row">
                                <div>
                                    Organisation Siren : <%= adherence.organisation %>
                                </div>
                                <div>
                                    ID recruteur : <%= adherence.recruteur %>
                                </div>
                                <div>
                                    Etat : <%= adherence.etat %>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                    <div class="container-column">
                        <div class="buttons">
                            <button class="btn-secondary" data-organisation="<%= adherence.organisation %>" data-recruteur="<%= adherence.recruteur %>">Accepter</button>
                            <button class="btn-danger" data-organisation="<%= adherence.organisation %>" data-recruteur="<%= adherence.recruteur %>">Refuser</button>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>
    </div>


    <script>
document.addEventListener("DOMContentLoaded", function() {
    // Cacher initialement le lien ListeUsers
    var usersLink = document.getElementById("ListeUsers");
    usersLink.style.display = "none";

    // Récupérer les informations de l'utilisateur
    fetch('/pageperso/user-info')
        .then(response => response.json())
        .then(user => {
            var userRole = user.role;
            // Afficher le lien ListeUsers si l'utilisateur est un administrateur
            if (userRole === "administrateur") {
                usersLink.style.display = "block";
            } else {
                usersLink.style.display = "none";
            }

            // Si l'utilisateur a le rôle de recruteur ou administrateur, permettre la validation ou le refus des demandes
            if (userRole === 'recruteur' || userRole === 'administrateur') {
                // Handle accept and reject button clicks
                document.querySelectorAll('.accept-btn').forEach(button => {
                    button.addEventListener('click', function() {
                        const organisation = this.dataset.organisation;
                        const recruteur = this.dataset.recruteur;
                        updateAdherenceState(organisation, recruteur, 'validee');
                    });
                });

                document.querySelectorAll('.reject-btn').forEach(button => {
                    button.addEventListener('click', function() {
                        const organisation = this.dataset.organisation;
                        const recruteur = this.dataset.recruteur;
                        updateAdherenceState(organisation, recruteur, 'refusee');
                    });
                });
            } else {
                console.log('Access denied: You do not have the required role to perform this action.');
            }
        })
        .catch(error => console.error('Error:', error));
});

function updateAdherenceState(organisation, recruteur, etat) {
    fetch('/DemandeAdherRecruteur/updateAdherence', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ organisation, recruteur, etat })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload(); // Reload the page to see the updates
        } else {
            console.error('Error updating adherence state:', data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}


    function updateAdherenceState(organisation, recruteur, etat) {
        fetch('/DemandeAdherRecruteur/updateAdherence', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ organisation, recruteur, etat })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload(); // Reload the page to see the updates
            } else {
                console.error('Error updating adherence state:', data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }
    </script>
</body>
</html>